# aliases
alias wifioff="networksetup -setairportpower en0 off"
alias wifion="networksetup -setairportpower en0 on"
alias wifireboot="wifioff && wifion"

# git aliases
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.c commit
git config --global alias.s status

# kubernetes aliases
alias k="kubectl"

###########################
# Docker section
###########################

## start docker machine on the 'default' virtualbox vm

docker-init() {
  if [ -z "$@" ]
    then
      name=default
    else
      name=$@
  fi
  docker-machine start $name 
  eval "$(docker-machine env $name)"
}

## Get into a container
into () {
  docker exec -ti $@ sh
}

## Cleans docker images / containers
## to prevent them from eating ton
## of space
docker-clean() {
  echo 'Removing exited containers'
  docker rm $(docker ps -f=status=exited -a -q)
  echo 'Removing dangling images'
  docker rmi `docker images -qf 'dangling=true'`
}

## kill all containers
docker-killall() {
  docker ps | awk '{print $1}' | tail -n +2 | xargs docker kill
}

## kill all containers
docker-rmiall() {
  docker images | awk '{print $3}' | tail -n +2 | xargs docker kill
}

## Shorthand for interactive Erlang REPL
erldocker() {
  docker run -it --rm erlang
}

##################
# Misc section
##################

##################
# * Git commands
##################

## shortand git push

push () {
    git push --set-upstream origin `git symbolic-ref --short HEAD`
}

## provides a somewhat sane side-by-side git diff in the terminal

gdiff () {
    git difftool $1 -y -x "colordiff -y -W $COLUMNS" | less -R
}

## clean git log

glog () {
    git log --graph --oneline
}

## go to master, ensure it is latest from upstream

gm () {
	git checkout master
	git fetch && git reset --hard origin/master
}

## cleans merged branches in remote from local repo

clean_branches () {
	REMOTES="$@" 
	if [ -z "$REMOTES" ]
	then
		REMOTES=$(git remote)
	fi
	REMOTES=$(echo "$REMOTES" | xargs -n1 echo)
	RBRANCHES=() 
	while read REMOTE
	do
		CURRBRANCHES=($(git ls-remote $REMOTE | awk '{print $2}' | grep 'refs/heads/' | sed 's:refs/heads/::'))
		RBRANCHES=("${CURRBRANCHES[@]}" "${RBRANCHES[@]}")
	done < <(echo "$REMOTES" )
	[[ -n $RBRANCHES ]] || exit
	LBRANCHES=($(git branch | sed 's:\*::' | awk '{print $1}'))
	for i in "${LBRANCHES[@]}"
	do
		skip=
		for j in "${RBRANCHES[@]}"
		do
			[[ $i == $j ]] && {
				skip=1
				echo -e "\033[32m Keeping $i \033[0m"
				break
			}
		done
		[[ -n $skip ]] || {
			echo -e "\033[31m $(git branch -D $i) \033[0m"
		}
	done
}


## lsd is an enriched version of ls
alias ls='lsd'


